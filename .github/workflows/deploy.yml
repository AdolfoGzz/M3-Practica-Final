name: Deploy to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggering

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    environment: 'env backend' # Link to the environment (if secrets are there)

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js for Backend
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm ci

    - name: Build Backend
      working-directory: ./backend
      run: npm run build

    - name: 'Deploy backend to Azure Web App'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_BACKEND_NAME }} # Use Web App Name secret
        publish-profile: ${{ secrets.AZURE_WEBAPP_BACKEND_PUBLISH_PROFILE }} # Use Publish Profile secret
        package: ./backend/dist # Assuming build output is in backend/dist

  deploy-frontend:
    runs-on: ubuntu-latest
    environment: 'env backend' # Link to the environment (if secrets are there)

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js for Frontend
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci --legacy-peer-deps

    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build

    - name: Deploy frontend to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APP_TOKEN }} # Use Static Web App Token secret
        repo_token: ${{ secrets.GITHUB_TOKEN }} # Provided by GitHub Actions
        action: "upload"
        app_location: "/frontend" # Location of your frontend code relative to repo root
        output_location: "dist" # Location of your build output relative to app_location
        api_location: "/backend" # Location of your backend code relative to repo root (for SWA built-in API) 